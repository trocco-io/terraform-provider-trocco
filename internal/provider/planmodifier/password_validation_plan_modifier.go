package planmodifier

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

var _ planmodifier.String = &PasswordValidationPlanModifier{}

// PasswordValidationPlanModifier is a plan modifier that validates password based on password_auto_generated value.
type PasswordValidationPlanModifier struct{}

func (m PasswordValidationPlanModifier) Description(ctx context.Context) string {
	return "Validates password based on password_auto_generated value during resource creation."
}

func (m PasswordValidationPlanModifier) MarkdownDescription(ctx context.Context) string {
	return m.Description(ctx)
}

func (m PasswordValidationPlanModifier) PlanModifyString(ctx context.Context, req planmodifier.StringRequest, resp *planmodifier.StringResponse) {
	// Only apply this validation during resource creation
	if !req.State.Raw.IsNull() {
		return
	}

	// Get the value of password_auto_generated
	var passwordAutoGenerated types.Bool
	diags := req.Plan.GetAttribute(ctx, path.Root("password_auto_generated"), &passwordAutoGenerated)
	if diags.HasError() {
		resp.Diagnostics.Append(diags...)
		return
	}

	// If password_auto_generated is true, password should not be set
	if passwordAutoGenerated.ValueBool() {
		if !req.ConfigValue.IsNull() && req.ConfigValue.ValueString() != "" {
			resp.Diagnostics.AddAttributeError(
				path.Root("password"),
				"Invalid Configuration",
				"When password_auto_generated is set to true, password cannot be specified.",
			)
		}
		return
	}

	// If password_auto_generated is false, password is required
	if !passwordAutoGenerated.ValueBool() && (req.ConfigValue.IsNull() || req.ConfigValue.ValueString() == "") {
		resp.Diagnostics.AddAttributeError(
			path.Root("password"),
			"Missing Required Attribute",
			"When password_auto_generated is set to false, password is required.",
		)
	}
}
